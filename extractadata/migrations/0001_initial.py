# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2018-05-29 22:39
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VActiveExpedTplant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expedid', models.IntegerField(blank=True, null=True)),
                ('tplantid', models.IntegerField(blank=True, null=True)),
                ('family', models.CharField(blank=True, max_length=80, null=True)),
                ('genus', models.CharField(blank=True, max_length=80, null=True)),
                ('species', models.CharField(blank=True, max_length=80, null=True)),
                ('common', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'v_active_exped_tplant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logid', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('event', models.CharField(blank=True, max_length=255, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'db_table': 'v_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VAdminPrefs',
            fields=[
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.NullBooleanField()),
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('style_box', models.CharField(blank=True, max_length=40, null=True)),
                ('style', models.CharField(blank=True, max_length=40, null=True)),
                ('lang', models.CharField(blank=True, max_length=2, null=True)),
                ('font', models.CharField(blank=True, max_length=40, null=True)),
                ('fontsize', models.CharField(blank=True, max_length=6, null=True)),
                ('mainwidth', models.SmallIntegerField(blank=True, null=True)),
                ('icon_view', models.SmallIntegerField(blank=True, null=True)),
                ('icon_logo', models.SmallIntegerField(blank=True, null=True)),
                ('verb', models.SmallIntegerField(blank=True, null=True)),
                ('debug', models.SmallIntegerField(blank=True, null=True)),
                ('firsttab', models.SmallIntegerField(blank=True, null=True)),
                ('showbanner', models.NullBooleanField()),
                ('listview1', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'v_admin_prefs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VAssay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ttitle', models.CharField(blank=True, max_length=255, null=True)),
                ('ttitle_short', models.CharField(blank=True, max_length=255, null=True)),
                ('assayid', models.IntegerField(blank=True, null=True)),
                ('targetid', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('folder', models.CharField(blank=True, max_length=255, null=True)),
                ('detection_meth', models.IntegerField(blank=True, null=True)),
                ('data_format', models.IntegerField(blank=True, null=True)),
                ('substrate', models.CharField(blank=True, max_length=255, null=True)),
                ('ref_compound', models.CharField(blank=True, max_length=255, null=True)),
                ('mode_of_action', models.IntegerField(blank=True, null=True)),
                ('sopfile', models.CharField(blank=True, max_length=255, null=True)),
                ('developer', models.CharField(blank=True, max_length=255, null=True)),
                ('validator', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('title_short', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'v_assay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VCcaResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cca_resultid', models.IntegerField(blank=True, null=True)),
                ('sampleid', models.IntegerField(blank=True, null=True)),
                ('chemclassid', models.SmallIntegerField(blank=True, null=True)),
                ('classname', models.CharField(blank=True, max_length=80, null=True)),
                ('ref_table', models.CharField(blank=True, max_length=20, null=True)),
                ('ref_fkey', models.CharField(blank=True, max_length=20, null=True)),
                ('ref_id', models.IntegerField(blank=True, null=True)),
                ('bresult', models.NullBooleanField()),
            ],
            options={
                'db_table': 'v_cca_results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VCompound',
            fields=[
                ('sampleid', models.IntegerField(primary_key=True, serialize=False)),
                ('origin_sampleid', models.IntegerField(blank=True, null=True)),
                ('opeid', models.IntegerField(blank=True, null=True)),
                ('isolationdate', models.DateField(blank=True, null=True)),
                ('depid', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('remove', models.NullBooleanField()),
                ('purity_pct', models.SmallIntegerField(blank=True, null=True)),
                ('purity_notes', models.TextField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('solvent', models.CharField(blank=True, max_length=255, null=True)),
                ('mw', models.FloatField(blank=True, null=True)),
                ('formula', models.CharField(blank=True, max_length=255, null=True)),
                ('name_common', models.CharField(blank=True, max_length=255, null=True)),
                ('name_iupac', models.CharField(blank=True, max_length=255, null=True)),
                ('smiles', models.CharField(blank=True, max_length=255, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
                ('operator', models.CharField(blank=True, max_length=80, null=True)),
                ('depositor', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'v_compound',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VInactiveExpedTplant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expedid', models.IntegerField(blank=True, null=True)),
                ('tplantid', models.IntegerField(blank=True, null=True)),
                ('family', models.CharField(blank=True, max_length=80, null=True)),
                ('genus', models.CharField(blank=True, max_length=80, null=True)),
                ('species', models.CharField(blank=True, max_length=80, null=True)),
                ('common', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'v_inactive_exped_tplant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VPlateAssay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plateid', models.IntegerField(blank=True, null=True)),
                ('platetype', models.CharField(blank=True, max_length=2, null=True)),
                ('platemap', models.CharField(blank=True, max_length=255, null=True)),
                ('platemapid', models.IntegerField(blank=True, null=True)),
                ('solvent', models.CharField(blank=True, max_length=255, null=True)),
                ('origin', models.CharField(blank=True, max_length=2, null=True)),
                ('active', models.SmallIntegerField(blank=True, null=True)),
                ('runid', models.IntegerField(blank=True, null=True)),
                ('runtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('ractive', models.NullBooleanField()),
                ('rstatus', models.SmallIntegerField(blank=True, null=True)),
                ('paorigin', models.CharField(blank=True, max_length=2, null=True)),
                ('origin_plateid', models.IntegerField(blank=True, null=True)),
                ('origin_volume', models.FloatField(blank=True, null=True)),
                ('volume_init', models.FloatField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'v_plate_assay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VPlateDilution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plateid', models.IntegerField(blank=True, null=True)),
                ('platetype', models.CharField(blank=True, max_length=2, null=True)),
                ('platemap', models.CharField(blank=True, max_length=255, null=True)),
                ('platemapid', models.IntegerField(blank=True, null=True)),
                ('solvent', models.CharField(blank=True, max_length=255, null=True)),
                ('origin', models.CharField(blank=True, max_length=2, null=True)),
                ('active', models.SmallIntegerField(blank=True, null=True)),
                ('mo_plateid', models.IntegerField(blank=True, null=True)),
                ('mo_volume', models.FloatField(blank=True, null=True)),
                ('is_diluted', models.NullBooleanField()),
                ('di_date', models.DateField(blank=True, null=True)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('volume_dilution', models.FloatField(blank=True, null=True)),
                ('volume_current', models.FloatField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'v_plate_dilution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VPlateDiscovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plateid', models.IntegerField(blank=True, null=True)),
                ('platetype', models.CharField(blank=True, max_length=2, null=True)),
                ('platemap', models.CharField(blank=True, max_length=255, null=True)),
                ('platemapid', models.IntegerField(blank=True, null=True)),
                ('solvent', models.CharField(blank=True, max_length=255, null=True)),
                ('origin', models.CharField(blank=True, max_length=2, null=True)),
                ('active', models.SmallIntegerField(blank=True, null=True)),
                ('tatitle', models.TextField(blank=True, null=True)),
                ('assayid', models.IntegerField(blank=True, null=True)),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('volume_current', models.FloatField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'v_plate_discovery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VPlateMother',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plateid', models.IntegerField(blank=True, null=True)),
                ('platetype', models.CharField(blank=True, max_length=2, null=True)),
                ('platemap', models.CharField(blank=True, max_length=255, null=True)),
                ('platemapid', models.IntegerField(blank=True, null=True)),
                ('solvent', models.CharField(blank=True, max_length=255, null=True)),
                ('origin', models.CharField(blank=True, max_length=2, null=True)),
                ('active', models.SmallIntegerField(blank=True, null=True)),
                ('volume_init', models.FloatField(blank=True, null=True)),
                ('volume_current', models.FloatField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'v_plate_mother',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VPlatePlant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tlcplateid', models.IntegerField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('lane', models.SmallIntegerField(blank=True, null=True)),
                ('col', models.SmallIntegerField(blank=True, null=True)),
                ('classname', models.CharField(blank=True, max_length=80, null=True)),
                ('tlc_compoundtype', models.SmallIntegerField(blank=True, null=True)),
                ('family', models.CharField(blank=True, max_length=80, null=True)),
                ('genus', models.CharField(blank=True, max_length=80, null=True)),
                ('species', models.CharField(blank=True, max_length=80, null=True)),
                ('common', models.CharField(blank=True, max_length=80, null=True)),
                ('result', models.NullBooleanField()),
            ],
            options={
                'db_table': 'v_plate_plant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VPlateTannin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plateid', models.IntegerField(blank=True, null=True)),
                ('platetype', models.CharField(blank=True, max_length=2, null=True)),
                ('platemap', models.CharField(blank=True, max_length=255, null=True)),
                ('platemapid', models.IntegerField(blank=True, null=True)),
                ('solvent', models.CharField(blank=True, max_length=255, null=True)),
                ('origin', models.CharField(blank=True, max_length=2, null=True)),
                ('active', models.SmallIntegerField(blank=True, null=True)),
                ('analdate', models.DateField(blank=True, null=True)),
                ('opeid', models.IntegerField(blank=True, null=True)),
                ('last', models.CharField(blank=True, max_length=80, null=True)),
                ('first', models.CharField(blank=True, max_length=80, null=True)),
                ('imagefile', models.CharField(blank=True, max_length=80, null=True)),
                ('scanfile', models.CharField(blank=True, max_length=80, null=True)),
                ('dilution', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'v_plate_tannin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ttitle', models.CharField(blank=True, max_length=255, null=True)),
                ('ttitle_short', models.CharField(blank=True, max_length=255, null=True)),
                ('atitle', models.CharField(blank=True, max_length=255, null=True)),
                ('atitle_short', models.CharField(blank=True, max_length=255, null=True)),
                ('runid', models.IntegerField(blank=True, null=True)),
                ('assayid', models.IntegerField(blank=True, null=True)),
                ('targetid', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('run_data_source', models.SmallIntegerField(blank=True, null=True)),
                ('folder', models.CharField(blank=True, max_length=255, null=True)),
                ('platemap', models.CharField(blank=True, max_length=255, null=True)),
                ('platemapid', models.IntegerField(blank=True, null=True)),
                ('plateorigin', models.CharField(blank=True, max_length=2, null=True)),
                ('nreplicates', models.SmallIntegerField(blank=True, null=True)),
                ('operator', models.IntegerField(blank=True, null=True)),
                ('goal', models.TextField(blank=True, null=True)),
                ('automation', models.CharField(blank=True, max_length=255, null=True)),
                ('qcdata', models.CharField(blank=True, max_length=255, null=True)),
                ('evaluation', models.SmallIntegerField(blank=True, null=True)),
                ('evaluation_comments', models.TextField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'v_run',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VRunProcess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('runprocessid', models.IntegerField(blank=True, null=True)),
                ('runid', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('method', models.TextField(blank=True, null=True)),
                ('nresults', models.SmallIntegerField(blank=True, null=True)),
                ('normalized', models.NullBooleanField()),
                ('normalized_value', models.FloatField(blank=True, null=True)),
                ('join_replicates', models.NullBooleanField()),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('plateprocdatasetid', models.IntegerField(blank=True, null=True)),
                ('row', models.CharField(blank=True, max_length=1, null=True)),
                ('col', models.SmallIntegerField(blank=True, null=True)),
                ('result', models.FloatField(blank=True, null=True)),
                ('error', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'v_run_process',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VTarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('targetid', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('folder', models.CharField(blank=True, max_length=255, null=True)),
                ('disease', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_format', models.IntegerField(blank=True, null=True)),
                ('principle', models.TextField(blank=True, null=True)),
                ('literature', models.TextField(blank=True, null=True)),
                ('client', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('title_short', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'v_target',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VTargetAssay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('targetid', models.IntegerField(blank=True, null=True)),
                ('ttitle', models.CharField(blank=True, max_length=255, null=True)),
                ('ttitle_short', models.CharField(blank=True, max_length=255, null=True)),
                ('tfolder', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_format', models.IntegerField(blank=True, null=True)),
                ('tactive', models.NullBooleanField()),
                ('tstatus', models.SmallIntegerField(blank=True, null=True)),
                ('assayid', models.IntegerField(blank=True, null=True)),
                ('atitle', models.CharField(blank=True, max_length=255, null=True)),
                ('atitle_short', models.CharField(blank=True, max_length=255, null=True)),
                ('afolder', models.CharField(blank=True, max_length=255, null=True)),
                ('detection_meth', models.IntegerField(blank=True, null=True)),
                ('sopfile', models.CharField(blank=True, max_length=255, null=True)),
                ('data_format', models.IntegerField(blank=True, null=True)),
                ('aactive', models.NullBooleanField()),
                ('astatus', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'v_target_assay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VTargetAssayRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('targetid', models.IntegerField(blank=True, null=True)),
                ('ttitle', models.CharField(blank=True, max_length=255, null=True)),
                ('ttitle_short', models.CharField(blank=True, max_length=255, null=True)),
                ('tfolder', models.CharField(blank=True, max_length=255, null=True)),
                ('assay_format', models.IntegerField(blank=True, null=True)),
                ('tactive', models.NullBooleanField()),
                ('tstatus', models.SmallIntegerField(blank=True, null=True)),
                ('assayid', models.IntegerField(blank=True, null=True)),
                ('atitle', models.CharField(blank=True, max_length=255, null=True)),
                ('atitle_short', models.CharField(blank=True, max_length=255, null=True)),
                ('afolder', models.CharField(blank=True, max_length=255, null=True)),
                ('detection_meth', models.IntegerField(blank=True, null=True)),
                ('data_format', models.IntegerField(blank=True, null=True)),
                ('sopfile', models.CharField(blank=True, max_length=255, null=True)),
                ('aactive', models.NullBooleanField()),
                ('astatus', models.SmallIntegerField(blank=True, null=True)),
                ('runid', models.IntegerField(blank=True, null=True)),
                ('run_data_source', models.SmallIntegerField(blank=True, null=True)),
                ('rtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('rfolder', models.CharField(blank=True, max_length=255, null=True)),
                ('platemapid', models.IntegerField(blank=True, null=True)),
                ('plateorigin', models.CharField(blank=True, max_length=2, null=True)),
                ('nreplicates', models.SmallIntegerField(blank=True, null=True)),
                ('automation', models.CharField(blank=True, max_length=255, null=True)),
                ('qcdata', models.CharField(blank=True, max_length=255, null=True)),
                ('evaluation', models.SmallIntegerField(blank=True, null=True)),
                ('evaluation_comments', models.TextField(blank=True, null=True)),
                ('ractive', models.NullBooleanField()),
                ('rstatus', models.SmallIntegerField(blank=True, null=True)),
                ('rcomments', models.TextField(blank=True, null=True)),
                ('opeid', models.IntegerField(blank=True, null=True)),
                ('rfirst_ope', models.CharField(blank=True, max_length=80, null=True)),
                ('rlast_ope', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'v_target_assay_run',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VTlcplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tlcplateid', models.IntegerField(blank=True, null=True)),
                ('opeid', models.IntegerField(blank=True, null=True)),
                ('first', models.CharField(blank=True, max_length=80, null=True)),
                ('last', models.CharField(blank=True, max_length=80, null=True)),
                ('nlanes', models.SmallIntegerField(blank=True, null=True)),
                ('eluent_developer', models.SmallIntegerField(blank=True, null=True)),
                ('imagefile', models.CharField(blank=True, max_length=80, null=True)),
                ('analdate', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('active', models.SmallIntegerField(blank=True, null=True)),
                ('init', models.CharField(blank=True, max_length=20, null=True)),
                ('initdate', models.DateField(blank=True, null=True)),
                ('edit', models.CharField(blank=True, max_length=20, null=True)),
                ('editdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'v_tlcplate',
                'managed': False,
            },
        ),
    ]
